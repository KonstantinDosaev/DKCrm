@using DKCrm.Shared.Models.CompanyModels
@using DKCrm.Shared.Models.OrderModels
@using DKCrm.Client.Pages.OrderManagement.Components
@using DKCrm.Client.Pages.OrderManagement.Dialogs
@using DKCrm.Shared.Constants
@using Microsoft.OData.UriParser
@page "/imported_orders"
@*@page "/imported_order/tag/{tagid:guid}"*@

<MudText Class="m-3" Typo="Typo.h4">Заказы от поставщиков</MudText>
<div class="d-flex align-items-center px-1">
    <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="() => _visibleAddOrderDialog = true" Style="margin-right: 1rem;" Color="Color.Tertiary">
        Добавить заказ
        <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.Add" Class="pa-0 ml-2"/>
    </MudButton>

    <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="() => _visibleSettingsOrderDialog = true" Style="margin-right: 1rem;" Color="Color.Tertiary">
        Настройки
        <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.Settings" Class="pa-0 ml-2" />
    </MudButton>
    <div style="width: 228px; margin-right: 0.5rem ">
        <MudSelect
            T="string"
            MultiSelection="true"
            @bind-SelectedValues="_currencyDisplay" Text="Отображаемая цена"
            Variant="Variant.Outlined" Dense="true" Style=""
            Class="select-button">
            <MudSelectItem T="string" Value="@("Продавца")">Продавца</MudSelectItem>
            <MudSelectItem T="string" Value="@("Сделки")">Сделки</MudSelectItem>
            <MudSelectItem T="string" Value="@("Локальная")">Локальная</MudSelectItem>
        </MudSelect>
    </div>
</div>
    
<MudTable ServerData="@(new Func<TableState, Task<TableData<ImportedOrder>>>(ServerReload))"
          Dense="false"
          Hover="true"
          ReadOnly="false"
          SelectOnRowClick="false"
          Striped="true"
          Bordered="true"
          HeaderClass="mud-table-header table-head-bordered"
         T="ImportedOrder"
          @ref="_table">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Список заказов</MudText>
        <MudSpacer />
      

            <MudTextField Clearable="true" T="string" ValueChanged="@(OnSearch)" Placeholder="Поиск"
                          Style="box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px; border-radius: 6px; padding: 0.5rem; margin-bottom: 0.5rem;"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>

            <div>
                <MudSelect Style="min-width:14rem" Class="ml-2" T="string" @bind-Value="SelectedOption">
                    <MudSelectItem Value="@(SearchChapterNames.CompanyName)">по компании</MudSelectItem>
                    <MudSelectItem Value="@(SearchChapterNames.ProductPartNumber)">по парт-номеру</MudSelectItem>
                </MudSelect>
            </div>
       
     
        
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh><MudTableSortLabel SortLabel="number_field" T="ImportedOrder">Номер заказа</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="ourCompany_field" T="ImportedOrder">Наша компания</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel Enabled="true" SortLabel="conterCompany_field" T="ImportedOrder">Компания поставщик</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="status_field" T="ImportedOrder">Статус</MudTableSortLabel></MudTh>

    </HeaderContent>
    <RowTemplate>
        <MudTd
            Style="@(_showDetails && OrderId == context.Id? "background-color: gainsboro; width: 3rem; margin: 0; padding: 0" : "background-color: none; width: 3rem; margin: 0; padding: 0")"
            DataLabel="Номер заказа">
            <MudIconButton Size="@Size.Large" 
                           OnClick="() => OpenOrderDetails(context.Id)" 
                           Color="Color.Default"
                           Icon="@(_showDetails && OrderId == context.Id? Icons.Material.Filled.KeyboardArrowUp : Icons.Material.Filled.KeyboardArrowDown)"
                           Class="pa-0 ml-2" />
        </MudTd>
      
        <MudTd DataLabel="Номер заказа">@context.Number</MudTd>
        <MudTd DataLabel="Наша компания">
            @if (context.OurCompany != null)
            {
                <MudText Typo="Typo.button"> @context.OurCompany.Name </MudText>
                <MudText Typo="Typo.body2">
                    @if (context.OurEmployee != null)
                    {
                        @context.OurEmployee.FirstName
                        @context.OurEmployee.MiddleName
                        @context.OurEmployee.LastName
                    }
                </MudText>
            }
        </MudTd>
        <MudTd DataLabel="Компания поставщик">
            @if (context.SellersCompany != null)
            {
                <MudText Typo="Typo.button"> @context.SellersCompany.Name </MudText>
                <MudText Typo="Typo.body2">
                    @if (context.EmployeeSeller != null)
                    {
                        @context.EmployeeSeller.FirstName
                        @context.EmployeeSeller.MiddleName
                        @context.EmployeeSeller.LastName
                    }
                </MudText>
            }
        </MudTd>
        <MudTd DataLabel="Статус">
            @if (context.ImportedOrderStatus != null)
            {
              @*  @context.ImportedOrderStatus.Value*@
            }
        </MudTd>
        <MudTd DataLabel="">

            <MudIconButton Size="@Size.Medium" OnClick="() => OpenUpdateOrderDialog(context)" Color="Color.Default" Icon="@Icons.Material.Sharp.Edit" Class="pa-0 ml-2"/>

        </MudTd>
    </RowTemplate>
    
    <ChildRowContent>
        @if (OrderId==context.Id && _showDetails)
        {
            <MudTr>
                <td colspan="6" style="text-align: center">
                    <MudCard Style="background: gainsboro;" Elevation="25">
@*                                <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.body1">Address Details for <strong>@context.Name</strong></MudText>
                            </CardHeaderContent>
                        </MudCardHeader>*@
                        <MudCardContent Class="pa-1">
                            <ImportedOrderDetailsComponent Id="OrderId" CurrencyDisplay="_currencyDisplay" />
                        </MudCardContent>
                    </MudCard>
                </td>
            </MudTr>
        }
    </ChildRowContent>

    <PagerContent>
        <MudTablePager PageSizeOptions="new int[] { 10, 20 }" />
    </PagerContent>
        </MudTable>
  
    



<MudDialog @bind-IsVisible="_visibleSettingsOrderDialog" Style="min-width: 900px" Options="new DialogOptions(){CloseButton = true}">
    <DialogContent>
        
    </DialogContent>
</MudDialog>

<CreateImportedOrderDialog
    @bind-VisibleDialog="_visibleAddOrderDialog"
                           RefreshProductList="() => _table!.ReloadServerData()" />
<EditImportedOrderDialog
    @bind-VisibleDialog="_visibleUpdateOrderDialog"
    RefreshProductList="() => _table!.ReloadServerData()"
    Id="Order.Id"/>


@code {
  
    [Parameter] public string? Chapter { get; set; }
    [Parameter] public Guid ChapterId { get; set; }

    private Guid OrderId { get; set; }
    public IEnumerable<string> _currencyDisplay { get; set; } = new HashSet<string>() { "Сделки" };
    private List<ImportedOrder>? Orders { get; set; }
    private List<ImportedOrder>? AllOrders { get; set; }

    private  List<ImportedOrderStatus>? StatusList { get; set; }

    public ImportedOrder Order { get; set; } = new ();

    private MudTable<ImportedOrder>? _table;
    private string? _searchString = null;
    public string? SelectedOption { get; set; } = SearchChapterNames.CompanyName;
    private FilterOrderTuple? _filterOrderTuple;

    private bool _showDetails;
    private bool _visibleAddOrderDialog;
    private bool _visibleUpdateOrderDialog;
    private bool _visibleSettingsOrderDialog;

    private async Task<TableData<ImportedOrder>> ServerReload(TableState state)
    {
       
        var response = await ImportedOrderManager.GetBySortFilterPaginationAsync(new SortPagedRequest<FilterOrderTuple>()
        {
            PageIndex = state.Page,
            PageSize = state.PageSize,
            SearchString = _searchString,
            SortLabel = state.SortLabel,
            Chapter = Chapter,
            ChapterId = ChapterId,
            SortDirection = state.SortDirection,
             SearchInChapter = SelectedOption,
                FilterTuple = _filterOrderTuple
        });
       
        return new TableData<ImportedOrder>() { TotalItems = response.TotalItems, Items = response.Items };
        
    }
    private void OnSearch(string text)
    {
        _searchString = text;
        SelectedOption = SelectedOption != "null" ? SelectedOption : null;
        _table!.ReloadServerData();
    }
    private void SelectSearchOption(string text)
    {
        SelectedOption = text!="null"? text : null;
    }
    private void OnFilter(FilterOrderTuple filterTuple)
    {
        _filterOrderTuple = filterTuple;
        _table!.ReloadServerData();
    }
    
    private void OpenUpdateOrderDialog(ImportedOrder order)
    {
        Order = order;
        _visibleUpdateOrderDialog = true;
    }
   
    
    private void OpenOrderDetails(Guid orderId)
    {
        OrderId = orderId;
        _showDetails = !_showDetails;
    }

    private async Task OpenSettingsDialog()
    {
        if (await ImportedOrderManager.AddAsync(Order!))
        {
            _visibleAddOrderDialog = false;
            _snackBar.Add("Заказ добавлен!");
        }
    }
}
<style>
    .mud-table-header {
        background-color: #cbf0ee;
        color: white !important;
        font-weight: bold;
    }
    .select-button {
        margin: 0 !important;
  
        
    }
    .select-button .mud-input-slot.mud-input-root-outlined {
        padding: 0.67rem 0.8rem !important;
        text-transform: uppercase !important;
        font-size: 0.85rem !important;
        
    }
</style>

