@using DKCrm.Shared.Models.CompanyModels
@using DKCrm.Shared.Models.OrderModels
@using DKCrm.Client.Pages.OrderManagement.Forms
@using DKCrm.Client.Pages.OrderManagement.Dialogs
@page "/imported_order/{id:guid}"

@if (Order != null)
{
    <MudText Class="m-2" Typo="Typo.h4">Заказ № @Order.Id</MudText>
    @if (Order.OurCompany != null)
    {
        <MudPaper Elevation="12" Class="p-2 m-1 d-flex justify-content-between align-items-center">
            <div>
                <p class="fs-4 mb-1 ">Наша компания</p>
                <MudText Typo="Typo.body1">
                    <span class="mr-2 fw-bold">Название компании:</span>
                    @Order.OurCompany.Name
                </MudText>
                <MudText Typo="Typo.body1">
                    <span class="mr-2 fw-bold">Сотрудник ведущий сделку:</span>
                    @if (Order.OurEmployee != null)
                    {
                        @Order.OurEmployee.FirstName
                        @Order.OurEmployee.MiddleName
                        @Order.OurEmployee.LastName
                    }
                </MudText>
            </div>
            <MudButton Variant="Variant.Filled" Size="Size.Medium" Href=@($"/companies/{Order.OurCompanyId}") Style="margin-left: 1rem; max-height: 3rem;" Color="Color.Tertiary">
                Подробнее
                <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.ArrowRight" Class="pa-0 ml-2" />
            </MudButton>

        </MudPaper>
    }
    @if (Order.SellersCompany != null)
    {
        <MudPaper Elevation="12" Class="p-2 m-1 d-flex justify-content-between align-items-center">
            <div>
                <p class="fs-4 mb-1 ">Компания поставщик</p>
                <MudText Typo="Typo.body1">
                    <span class="mr-2 fw-bold">Название компании:</span>
                    @Order.SellersCompany.Name
                </MudText>
                <MudText Typo="Typo.body1">
                    <span class="mr-2 fw-bold">Сотрудник ведущий сделку:</span>
                    @if (Order.EmployeeSeller != null)
                    {
                        @Order.EmployeeSeller.FirstName
                        @Order.EmployeeSeller.MiddleName
                        @Order.EmployeeSeller.LastName
                    }
                </MudText>
            </div>
            <MudButton Variant="Variant.Filled" Size="Size.Medium" Href=@($"/companies/{Order.SellersCompanyId}") Style="margin-left: 1rem; max-height: 3rem;" Color="Color.Tertiary">
                Подробнее
                <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.ArrowRight" Class="pa-0 ml-2" />
            </MudButton>

        </MudPaper>
    }
    <MudPaper Elevation="12" Class="p-2 m-1">
        <p class="fs-4 mb-1 ">Компания поставщик</p>
        <MudGrid>
                
            <MudItem xs="4" Class="p-0 d-flex justify-content-center align-items-baseline">
                <MudIconButton Variant="Variant.Outlined" Size="Size.Medium" Style="margin-left: 1rem; max-height: 3rem;" Color="Color.Tertiary">
                            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Filled.KeyboardDoubleArrowRight" Class="pa-0 mx-2" />
                            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Filled.KeyboardDoubleArrowRight" Class="pa-0 mx-2" />
                        </MudIconButton>
                </MudItem>
            <MudItem xs="4" Class="p-0 d-flex justify-content-center align-items-baseline">
                    <MudIconButton Variant="Variant.Outlined" Size="Size.Medium" Style="margin-left: 1rem; max-height: 3rem;" Color="Color.Tertiary">
                            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Filled.KeyboardDoubleArrowLeft" Class="pa-0 mx-2" />
                            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Filled.KeyboardDoubleArrowRight" Class="pa-0 mx-2" />
                        </MudIconButton>
                        </MudItem>
            <MudItem xs="4" Class="p-0 d-flex justify-content-center align-items-baseline">
                <MudIconButton Variant="Variant.Outlined" Size="Size.Medium" Style="margin-left: 1rem; max-height: 3rem;" Color="Color.Tertiary">
                            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Filled.KeyboardDoubleArrowLeft" Class="pa-0 mx-2" />
                            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Filled.KeyboardDoubleArrowRight" Class="pa-0 mx-2" />
                        </MudIconButton>
                </MudItem>
                
            </MudGrid>

        <MudButton Variant="Variant.Filled" Size="Size.Medium" Href=@($"/companies/{Order.SellersCompanyId}") Style="margin-left: 1rem; max-height: 3rem;" Color="Color.Tertiary">
            Подробнее
            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.ArrowRight" Class="pa-0 ml-2"/>
        </MudButton>

    </MudPaper>
   
    <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="() => _visibleAddImportedProductDialog=true" Style="margin-left: 1rem;" Color="Color.Tertiary">
        Добавить продукт
        <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.Add" Class="pa-0 ml-2" />
    </MudButton>

    <MudTable Height="" Class="m-2" Items="@ImportedProducts" Hover="true" SortLabel="Sort By" T="ImportedProduct"
          OnRowClick="RowClickEvent" Filter="new Func<ImportedProduct, bool>(FilterFunc1)"
          Striped="true"
          Bordered="true"
          HeaderClass="mud-table-header table-head-bordered">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Список продуктов поставки</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString1"
                      Placeholder="Поиск"
                      Style="box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px; border-radius: 6px; padding: 0.5rem; margin-bottom: 0.5rem"
                      Clearable="true"
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x => x.PartNumber!)">Парт-номер</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x => x.Name)">Наименование</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel Enabled="true" SortBy="new Func<int, object>(x => x!)">Количество</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel Enabled="false" SortBy="new Func<Company, object>(x => x.Name)">Цена в валюте поставщика</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel Enabled="false" SortBy="new Func<ImportedOrderStatus, object>(x => x.Value)">Цена в локальной валюте</MudTableSortLabel></MudTh>


        </HeaderContent>
        <RowTemplate>
            @if (context.Product != null)
            {
                <MudTd DataLabel="Парт-номер">@context.Product.PartNumber</MudTd>
                <MudTd DataLabel="Наименование">@context.Product.Name</MudTd>

            }
            <MudTd DataLabel="Количество">@context.Quantity</MudTd>
            <MudTd DataLabel="Цена в валюте поставщика">@context.PriceInSupplierCurrency</MudTd>
            <MudTd DataLabel="Цена в валюте сделки">@context.PriceInTransactionCurrency</MudTd>
            <MudTd DataLabel="Цена в локальной валюте">@context.PriceLocal</MudTd>
            @*                    <MudTd DataLabel="Тип контрагента">

        <MudIconButton Size="@Size.Medium" OnClick="() => OpenUpdateOrderDialog(context)" Color="Color.Default" Icon="@Icons.Material.Sharp.Update" Class="pa-0 ml-2"/>

        </MudTd>*@
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 20 }" />
        </PagerContent>
    </MudTable>





    <CreateImportedProductDialog VisibleDialog="_visibleAddImportedProductDialog"
                            Close="() => _visibleAddImportedProductDialog=false"
                            RefreshProductList="OnInitializedAsync"
                            Order="Order"/>
@*    <EditImportedProductDialog VisibleDialog="_visibleEditImportedProductDialog"
                          Close="() => _visibleEditImportedProductDialog=false"
                          RefreshProductList="OnInitializedAsync"
                          Id="ImportedProduct!.Id" />*@
}
@code {

    [Parameter] public Guid Id { get; set; }
    public ImportedOrder? Order { get; set; }

    private List<ImportedProduct>? ImportedProducts { get; set; }

    public ImportedProduct? ImportedProduct { get; set; }

    //FormImportedProduct? _importProductForm = null!;

    private string _searchString1 = "";

    public bool VisibleCompanySettingsDrawer { get; set; }
    MudListItem? _selectedItem;
    object _selectedValue = 1;

    private bool _visibleAddImportedProductDialog;
    private bool _visibleEditImportedProductDialog;
    private bool _visibleUpdateOrderDialog;

    protected override async Task OnInitializedAsync()
    {
        Order = await ImportedOrderManager.GetDetailsAsync(Id);
        if (Order.ImportedProducts != null) ImportedProducts = Order.ImportedProducts.ToList();
    }

    private bool FilterFunc1(ImportedProduct element) => FilterFunc(element, _searchString1);

    private bool FilterFunc(ImportedProduct element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        //if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //    return true;
        //if (element.OurCompany != null && element.OurCompany.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //    return true;
        //if (element.SellersCompany != null && element.SellersCompany.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //    return true;


        return false;
    }

    private void OpenEditImportProductDialog(ImportedProduct importedProduct)
    {
        ImportedProduct = importedProduct;
        _visibleEditImportedProductDialog = true;
    }
    private void RowClickEvent(TableRowClickEventArgs<ImportedProduct> tableRowClickEventArgs)
    {
        _navigationManager.NavigateTo($"/companies/{tableRowClickEventArgs.Item.Id}");
    }

   
    
}
<style>
    .mud-table-header {
        background-color: #cbf0ee;
        color: white !important;
        font-weight: bold;
    }
</style>

