@page "/product"
@page "/product/{categoryid:guid}"
@using Microsoft.AspNetCore.Components
@using DKCrm.Client.Components.ProductFilter
@inject ISnackbar Snackbar

<MudTable Items="@Elements"
          Dense="true"
          Hover="true"
          ReadOnly="false"
          CanCancelEdit="true"
          Filter="new Func<Product, bool>(FilterFunc)"
          @bind-SelectedItems="selectedItems"
          SortLabel="Sort By"
          CommitEditTooltip="Commit Edit"
          OnCommitEditClick="@(() => Snackbar.Add("Изменения сохранены!"))"
          RowEditPreview="BackupItem" RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="ItemHasBeenCommitted"
          IsEditRowSwitchingBlocked="true"
          ApplyButtonPosition="@applyButtonPosition"
          EditButtonPosition="@editButtonPosition"
          EditTrigger="@editTrigger"
          MultiSelection="true"
          SelectOnRowClick="true">

    <ToolBarContent>
        <MudText Typo="Typo.h4">@(_currentCategoryName ?? "Список продуктов")</MudText>
        <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="AddProduct" Style="margin-left: 1rem;" Color="Color.Tertiary">
            Добавить продукт
            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.Add" Class="pa-0 ml-2"/>
        </MudButton>
        <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="() => _visibleProductFilter=true" Style="margin-left: 1rem;" Color="Color.Warning">
            Фильтр
            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.FilterAlt" Class="pa-0 ml-2"/>
        </MudButton>
            <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="() => _storageSettings.OpenStorageDialog()" Style="margin-left: 1rem;" Color="Color.Warning">
            Склады
            <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.FilterAlt" Class="pa-0 ml-2"/>
        </MudButton>
        @if (selectedItems.Any())
        {
            <MudButton Variant="Variant.Filled"  StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="OnButtonDeleteClicked" Style="margin-left: 1rem;">Удалить</MudButton>
        }

        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Clearable="true" Placeholder="Поиск" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        @if (applyButtonPosition.DisplayApplyButtonAtStart() || (editButtonPosition.DisplayEditButtonAtStart() && editTrigger == TableEditTrigger.EditButton))
        {
            <col style="width: 50px;" />
        }
@*        <col style="width: 50px;" />
        <col style="width: 150px;" />
        <col style="width: 150px;" />*@
        <col />
        <col />
        <col />
        <col />
        @if (applyButtonPosition.DisplayApplyButtonAtEnd() || (editButtonPosition.DisplayEditButtonAtEnd() && editTrigger == TableEditTrigger.EditButton))
        {
            <col style="width: 50px;" />
        }
    </ColGroup>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x => x.Id)">Категория</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Product, object>(x => x.PartNumber)">P/N</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Product, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
        <MudTh>Производитель</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Категория">
            @if (context.Category != null)
            {
                @context.Category.Name
            }
        </MudTd>
        <MudTd DataLabel="Email">@context.PartNumber</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Brand">
            @if (context.Brand != null)
            {
                @context.Brand.Name
            }
        </MudTd>

    </RowTemplate>
    <RowEditingTemplate>
        <MudTd DataLabel="Категория">
            @if(Categories!=null){
                <MudSelect T="Category" ToStringFunc="category => category.Name " Label="Категория" @bind-Value="@context.Category">
                    @foreach (var category in Categories)
                    {

                        <MudSelectItem T="Category" Value="@category">@category.Name</MudSelectItem>

                    }
                </MudSelect>
            }
        </MudTd>
        <MudTd DataLabel="P/N">
            <MudTextField @bind-Value="@context.PartNumber" Required />
        </MudTd>
        <MudTd DataLabel="Name">
            <MudTextField @bind-Value="@context.Name" Required />
        </MudTd>
        <MudTd DataLabel="Brand">
            <MudForm >
                <MudTextField @bind-Value="value" T="string" Label="Username" Required="true" RequiredError="Brand name is required!" />
            </MudForm>
            <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="() => AddBrand()" Color="Color.Tertiary">Создать</MudButton>
            @if(Brands!=null){
                <MudSelect T="Brand" ToStringFunc="brand => brand.Name " Label="Производитель" @bind-Value="@context.Brand">
                    @foreach (var state in Brands)
                    {
                     
                        <MudSelectItem T="Brand" Value="@state">@state.Name</MudSelectItem>

                    }
                </MudSelect>
            }
        </MudTd>

    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager HidePageNumber="true" RowsPerPageString="Строк на странице" />
    </PagerContent>

    <EditButtonContent Context="button">
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
    </EditButtonContent>
</MudTable>



<MudDrawer @bind-Open="@_visibleProductFilter" Anchor="@Anchor.Start" Elevation="1" Variant="@DrawerVariant.Temporary" Height="100VH" Width="50VW">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">Фильтр</MudText>
    </MudDrawerHeader>
    <ProductFilterComponent/>
</MudDrawer>


<StorageSettings @ref="_storageSettings"/>



@code {

}
