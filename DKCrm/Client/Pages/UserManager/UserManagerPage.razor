@inject HttpClient httpClient
@inject ISnackbar Snackbar
@page "/usermanager"
@using DKCrm.Client.Pages.UserManager.Components
<MudTable Items="@_elements"
          Dense="true"
          Hover="true"
          ReadOnly="false"
          CanCancelEdit="true"
          Filter="new Func<ApplicationUser, bool>(FilterFunc)"
          @bind-SelectedItems="_selectedItems"
          SortLabel="Sort By"
          CommitEditTooltip="Commit Edit"
          OnCommitEditClick="@(() => Snackbar.Add("Изменения сохранены!"))"
          RowEditPreview="BackupItem" RowEditCancel="ResetItemToOriginalValues"
         IsEditRowSwitchingBlocked="true"
          ApplyButtonPosition="@_applyButtonPosition"
          EditButtonPosition="@_editButtonPosition"
          EditTrigger="@_editTrigger"
          MultiSelection="true"
          SelectOnRowClick="true">
         
    <ToolBarContent>
        <MudText Typo="Typo.h4">Управление пользователями</MudText>  <EmailConfigSettings  />
        <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="OpenDialog" Style="margin-left: 1rem;" Color="Color.Tertiary">Создать пользователя  <MudIcon Size="@Size.Large" Color="Color.Default" Icon="@Icons.Material.Sharp.Add" Class="pa-0 ml-2" /></MudButton>

        @if (_selectedItems.Any())
        {
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="OnButtonDeleteClicked" Style="margin-left: 1rem;">Удалить</MudButton>
        }
        <MudSpacer/>
        <MudTextField @bind-Value="_searchString" Placeholder="Поиск" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        @if (_applyButtonPosition.DisplayApplyButtonAtStart() || (_editButtonPosition.DisplayEditButtonAtStart() && _editTrigger == TableEditTrigger.EditButton))
        {
            <col style="width: 50px;"/>
        }
        <col style="width: 50px;"/>
        <col style="width: 150px;"/>
        <col style="width: 150px;"/>
        <col/>
        <col/>
        @if (_applyButtonPosition.DisplayApplyButtonAtEnd() || (_editButtonPosition.DisplayEditButtonAtEnd() && _editTrigger == TableEditTrigger.EditButton))
        {
            <col style="width: 50px;"/>
        }
    </ColGroup>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<ApplicationUser, object>(x => x.Id)">Фамилия</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<ApplicationUser, object>(x => x.Email!)">Email</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending"
                               SortBy="new Func<ApplicationUser, object>(x => x.UserName!)">Login</MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Фамили">@context.LastName</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Login">@context.UserName</MudTd>
        

        <MudTd DataLabel="Role"> <MudButton Variant="Variant.Filled" Size="Size.Medium" 
                                            OnClick="() => OpenRoleDialog(context)" 
                                            Color="Color.Tertiary">Изменить роль</MudButton> 
            <MudButton Variant="Variant.Filled" Size="Size.Medium" 
                       OnClick="() => OpenEditUserProfileDialog(context)" 
                       Color="Color.Tertiary">Редактировать профиль</MudButton></MudTd>
        <EmailConfigSettings User="@context"/>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd DataLabel="Фамили">@context.LastName</MudTd>
        <MudTd DataLabel="Email">
            <MudTextField @bind-Value="@context.Email" Required/>
           
        </MudTd>
        <MudTd DataLabel="Login">
            <MudTextField @bind-Value="@context.UserName" Required/>
        </MudTd>

    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager HidePageNumber="true" RowsPerPageString="Строк на странице" />
    </PagerContent>

    <EditButtonContent Context="button">
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled"/>
    </EditButtonContent>
</MudTable>

<MudDialog @bind-Visible="_visibleRegisterDialog" Options="_registerDialogOptions">
    <DialogContent>
        <Register/>
    </DialogContent>
</MudDialog>

<MudDialog @bind-Visible="_visibleRoleDialog" Options="_roleDialogOptions">
    <DialogContent>
        <MudSelect T="string" Label="US States" @bind-Value="_value">
            @if (_roles != null && _roles.Any())
            {
                @foreach (var state in _roles)
                {
                    <MudSelectItem T="string" Value="@state.Name">@state.Name</MudSelectItem>
                }
            }
        </MudSelect>
        <MudButton Variant="Variant.Filled" Size="Size.Medium" OnClick="UpdateRoles" Color="Color.Tertiary" Style="margin-top: 1rem;">Изменить роль</MudButton>
    </DialogContent>
</MudDialog>

@if (_visibleEditUserProfileDialog)
{
    <MudDialog @bind-Visible="_visibleEditUserProfileDialog" Style="max-width: 700px;padding: 0"
               Options="new DialogOptions(){CloseButton = true, FullScreen = true,}" Class="no-padding">
        <DialogContent>
            <UserProfile User="_currentUser"/>
        </DialogContent>
    </MudDialog>
}




