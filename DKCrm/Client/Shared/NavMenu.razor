@using DKCrm.Shared.Constants
@inject CustomStateProvider AuthStateProvider
<div class="my-navbody">
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="">DKCrm</a>
            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </div>

    <div class="@MyNavMenuCssClass" @onclick="ToggleNavMenu">
        <div class="navcontainer">
            <div class="navlink-nav">
                <div class="my-navitem">
                    <MudNavLink Class="my-navlink" Match="NavLinkMatch.All" Href="/">
                        <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.Home" Class="pa-0 ml-2"/>Home
                    </MudNavLink>
                </div>
                <div class="my-navitem">
                    <MudNavLink Class="my-navlink" Href="/product">
                        <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.ProductionQuantityLimits" Class="pa-0 ml-2"/>Product
                    </MudNavLink>
                </div>
                <div class="my-navitem">
                    <MudNavLink Class="my-navlink" Href="/chat">
                        <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.Chat" Class="pa-0 ml-2"/>Chat
                    </MudNavLink>
                </div>
                <AuthorizeView Roles="@RoleNames.SuAdmin">
                    <Authorized>
                        <div class="my-navitem">
                            <MudNavLink Class="my-navlink" Href="/usermanager">
                                <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.SupervisedUserCircle" Class="pa-0 ml-2"/>User Manager
                            </MudNavLink>
                        </div>
                    </Authorized>
                </AuthorizeView>
           
                <div class="my-navitem">
                    <MudNavLink Class="my-navlink" Href="/ddd">
                        <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.SupervisedUserCircle" Class="pa-0 ml-2"/>ddd
                    </MudNavLink>
                </div>
            </div>
        </div>
    </div>
    <AuthorizeView>
        <Authorized>
                @if (context.User.Identity != null)
                {
                    <div class="user-nav">
                        <div class="my-navitem">
                            <MudNavLink Class="my-navlink" Href="/userprofile">
                                <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.PermIdentity" Class="pa-0 ml-2"/>@context.User.Identity.Name
                            </MudNavLink>
                        </div>
                        <div class="my-navitem">
                            <MudNavLink Class="my-navlink" OnClick="@LogoutClick">
                                <MudIcon Size="@Size.Medium" Color="Color.Default" Icon="@Icons.Material.Sharp.DirectionsRun" Class="pa-0 ml-2"/>Выход
                            </MudNavLink>
                        </div>
                    </div>
                }
        </Authorized>
        <Authorizing>
            <h1>Загрузка ...</h1>
        </Authorizing>
    </AuthorizeView>
</div>
@code {
    private bool _collapseNavMenu = true;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;
    private string? MyNavMenuCssClass => _collapseNavMenu ? "collapse" : null;


    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }
    async Task LogoutClick()
    {
        await AuthStateProvider.Logout();
        _navigationManager.NavigateTo("/login");
    }
}
<style>

</style>